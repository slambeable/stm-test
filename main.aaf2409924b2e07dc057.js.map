{"version":3,"sources":["webpack:///./mixins/data.js","webpack:///./components/PageLoader/template.js","webpack:///./mixins/utils.js","webpack:///./components/PageLoader/index.js","webpack:///./components/UsersData/index.js","webpack:///./components/UsersData/template.js","webpack:///./components/UsersFilter/index.js","webpack:///./components/UsersFilter/template.js","webpack:///./mixins/api.js","webpack:///./index.js"],"names":["headersName","errorContent","error","length","Array","apply","map","Number","call","join","PageLoader","app","this","element","insertAdjacentHTML","template","querySelector","removeChild","UsersData","userData","usersData","data","header","user","name","first","last","picture","thumbnail","large","location","state","city","email","phone","date","Date","registered","toLocaleString","split","UsersFilter","table","input","button","emptyUsers","nameElements","querySelectorAll","tableElement","addEventListener","callback","ms","timer","clearTimeout","setTimeout","arguments","decoratorDelay","e","value","target","formateValue","trim","toLowerCase","counter","forEach","sliceName","textContent","slice","parentElement","classList","add","remove","handleErrors","res","ok","Error","status","json","handleSuccess","results","showError","document","innerHTML","errorMessage","errorHandler","console","async","loader","filter","render","path","fetch","then","catch","dataElement","addFilterHandler"],"mappings":"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","file":"main.aaf2409924b2e07dc057.js","sourcesContent":["// export { Object } data\n\nexport default {\n\n  // property { Array } headers name\n\n  headersName: [\n    'Name',\n    'Picture',\n    'Location',\n    'Email',\n    'Phone',\n    'Registration date',\n  ],\n\n  // property { Method } renders an error in the DOM\n  // parameter { string|Error } error description\n  // return { DOMString } DOMstring with error description\n\n  errorContent(error) {\n    return `<div class=\"alert-error\">\n      <div class=\"alert-error__content\">\n        <h2 class=\"alert-error__title\">\n          It look like there was a problem.\n        </h2>\n        <div class=\"alert-error__body\">\n          <p>An error occurred: \n            <span class=\"alert-error__status\">${error}</span>. Please try again later.</p>\n        </div>\n      </div>\n    </div>`;\n  },\n};\n","import { createArray } from '@/mixins/utils';\n\n// export { Function } template for Page Loader\n// return { DOMstring } template\n\nexport default () => {\n  const amountOfElements = createArray(12);\n\n  const header = '<div class=\"page-loader__header\"></div>';\n  const loader = `<div  class=\"page-loader__lds-spinner\">\n    ${amountOfElements.map(() => '<div></div>').join('')}\n  </div>`;\n\n  return `<div class=\"page-loader\">${header}${loader}</div>`;\n};\n","import data from './data';\n\n// export: { Function } formats date in dd.mm.yyyy\n// param { Date } data\n// return { string } formatted date\n\nexport const formateDate = (date) => date.toLocaleString('en-GB').split(',')[0];\n\n// export: { Function } creates an array of given length\n// param { string } length of Array\n// return { Array } array\n\nexport const createArray = (length) => Array.apply(null, ...[{ length }]).map(Number.call, Number);\n\n// export: { Function } hangable delay decorator\n// param { Function } callback\n// param { number } time to delay\n// return { Function } triggers a delayed callback\n\nexport const decoratorDelay = function (callback, ms) {\n  let timer = 0;\n  return function () {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      callback.apply(this, arguments);\n    }, ms || 0);\n  };\n};\n\n// export: { Function } error handler\n// param { string|Error } error\n\nexport const errorHandler = (error) => {\n  const app = document.querySelector('#app');\n  app.innerHTML = '';\n\n  const errorMessage = data.errorContent(error);\n\n  app.insertAdjacentHTML('afterbegin', errorMessage);\n};\n","import template from './template';\nimport './style.css';\n\n// components for show loader\n// export { PageLoader } class\n\nexport default class PageLoader {\n  // constructor\n  // parameter { DOMElement } application root element\n\n  constructor(app) {\n    this.app = app;\n    this.element = '';\n  }\n\n  // method for rendering element in DOM\n  // return { DOMElement } element\n\n  render() {\n    this.app.insertAdjacentHTML('afterbegin', template());\n    this.element = this.app.querySelector('.page-loader');\n\n    return this.element;\n  }\n\n  // method for remove element from DOM\n\n  remove() {\n    this.app.removeChild(this.element);\n  }\n}\n","import template from './template';\nimport './style.css';\n\n// components for show table with users data\n// export { UsersData } class\n\nexport default class UsersData {\n  // constructor\n  // parameter { DOMElement } application root element\n  // parameter { Object } users data\n\n  constructor(app, userData) {\n    this.app = app;\n    this.userData = userData;\n    this.element = '';\n  }\n\n  // method for rendering element in DOM\n  // return { DOMElement } element\n\n  render() {\n    this.app.insertAdjacentHTML('afterbegin', template(this.userData));\n    this.element = this.app.querySelector('.users-data');\n\n    return this.element;\n  }\n\n  // method for remove element from DOM\n\n  remove() {\n    this.app.removeChild(this.element);\n  }\n}\n","import { formateDate } from '@/mixins/utils';\nimport data from '@/mixins/data';\n\n// export { Function } template for Users Data\n// return { DOMstring } template\n\nexport default (usersData) => {\n  const headers = data.headersName.map((header) => `<th>${header}</th>`);\n  const tableHeader = `<thead><tr>${headers.join(' ')}</tr></thead>`;\n  const tableBody = usersData.map((user) => (\n    `<tr class=\"users-data__row\">\n      <td class=\"users-data__name\">${user.name.first} ${user.name.last}</td>\n      <td>\n        <div class=\"tooltip\">\n          <img src=\"${user.picture.thumbnail}\" alt=\"user-${user.name.first}-${user.name.last}\"/>\n          <img class=\"tooltip-image\" src=\"${user.picture.large}\" alt=\"user-${user.name.first}-${user.name.last}-large\"/>\n        </div>\n      </td>\n      <td>${user.location.state} ${user.location.city}</td>\n      <td>${user.email}</td>\n      <td>${user.phone}</td>\n      <td>${formateDate(new Date(user.registered.date))}</td>\n    </tr>`)).join(' ');\n  const table = `<table class=\"users-data__table\">${tableHeader}<tbody>${tableBody}</tbody></table>`;\n\n  return `<div class=\"users-data\">${table}</div>`;\n};\n","import template from './template';\nimport './style.css';\nimport { decoratorDelay } from '../../mixins/utils';\n\n// components for interface for filtering user data\n// export { UsersFilter } class\n\nexport default class UsersFilter {\n  // constructor\n  // parameter { DOMElement } application root element\n\n  constructor(app) {\n    this.app = app;\n    this.element = '';\n  }\n\n  // method for rendering element in DOM\n  // return { DOMElement } element\n\n  render() {\n    this.app.insertAdjacentHTML('afterbegin', template(this.userData));\n    this.element = this.app.querySelector('.users-filter');\n\n    return this.element;\n  }\n\n  // method for remove element from DOM\n\n  remove() {\n    this.app.removeChild(this.element);\n  }\n\n  // method adds handlers to the filtering component\n  // parameter { DOMElement } table with users data\n\n  addFilterHandler(table) {\n    const input = this.element.querySelector('.users-filter__input');\n    const button = this.element.querySelector('.users-filter__button');\n    const emptyUsers = this.element.querySelector('.users-filter__empty');\n    const nameElements = [...table.querySelectorAll('.users-data__name')];\n    const tableElement = table.querySelector('table');\n\n    const inputHandler = (e) => {\n      const { value } = e.target;\n      const formateValue = value.trim().toLowerCase();\n      let counter = 0;\n\n      nameElements.forEach((element) => {\n        const name = element.textContent.trim().toLowerCase();\n        const sliceName = name.slice(0, formateValue.length);\n        const { parentElement } = element;\n\n        if (sliceName !== formateValue) {\n          parentElement.classList.add('users-data__row_hide');\n          counter -= 1;\n        } else {\n          parentElement.classList.remove('users-data__row_hide');\n          counter += 1;\n        }\n      });\n\n      if (counter === -nameElements.length) {\n        emptyUsers.classList.add('users-filter__empty_visible');\n        tableElement.classList.add('users-data__table_hide');\n      } else {\n        emptyUsers.classList.remove('users-filter__empty_visible');\n        tableElement.classList.remove('users-data__table_hide');\n      }\n    };\n\n    const buttonHandler = () => {\n      input.value = '';\n\n      nameElements.forEach((element) => {\n        const { parentElement } = element;\n\n        parentElement.classList.remove('users-data__row_hide');\n        emptyUsers.classList.remove('users-data__empty-users_visible');\n        tableElement.classList.remove('users-data__table_hide');\n      });\n    };\n\n    input.addEventListener('input', decoratorDelay(inputHandler, 500));\n    button.addEventListener('click', buttonHandler);\n  }\n}\n","// export { Function } template for Users Filter\n// return { DOMstring } template\n\nexport default () => {\n  const filterInput = '<input class=\"users-filter__input\" placeholder=\"Filter by Name\"/>';\n  const clearButton = '<button class=\"users-filter__button\">Reset</button>';\n  const emptyUsers = '<div class=\"users-filter__empty\">Sorry, but no users with this name were found</div>';\n\n  return `<div class=\"users-filter\">${filterInput}${clearButton}${emptyUsers}</div>`;\n};\n","import { errorHandler } from './utils';\n\n// handler on error response from the server\n// parameter { response } response from server\n// throw: { Error } response status\n// return { Promise } response parsing in JSON\n\nconst handleErrors = (res) => {\n  if (!res.ok) {\n    throw new Error(res.status);\n  }\n  return res.json();\n};\n\n// handler on successful response from the server\n// parameter { Promise } response from server\n// return { Promise } results\n\nconst handleSuccess = (res) => res.results;\n\n// shows error in console and in DOM\n// parameter { string|Error} path to server\n\nfunction showError(error) {\n  errorHandler(error);\n  console.error(error);\n}\n\n// export { Promise } api for interacting with the server\n// parameter { string } path to server\n// return { Promise|Error } response from server\n\nexport default async (path) => fetch(path)\n  .then(handleErrors)\n  .then(handleSuccess)\n  .catch(showError);\n","import './style.css';\nimport PageLoader from './components/PageLoader/index';\nimport UsersData from './components/UsersData/index';\nimport UsersFilter from './components/UsersFilter/index';\nimport getUsersData from './mixins/api';\n\n// launches the application on full DOM load and parsing\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  try {\n    const app = document.querySelector('#app');\n    const loader = new PageLoader(app);\n    const filter = new UsersFilter(app);\n\n    loader.render();\n\n    const usersData = await getUsersData('https://randomuser.me/api/?results=15');\n\n    const data = new UsersData(app, usersData);\n\n    const dataElement = data.render();\n\n    filter.render();\n    filter.addFilterHandler(dataElement);\n\n    loader.remove();\n  } catch (e) {\n    console.error(e, '- Rendering cannot happen because no data was received.');\n  }\n});\n"],"sourceRoot":""}